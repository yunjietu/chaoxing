import{a as e,e as a,r as l,b2 as t,b as o,o as i,c as r,ai as s,bz as n,G as m,J as u,F as d}from"./@vue-wTDZSr7R.js";import{p as c,b as p,S as g,s as h}from"./index-SeYMZHv7.js";import{b as f,M as b}from"./ant-design-vue-qdrtx42b.js";import"./@ant-design-BpN5YQ3K.js";import"./vue-LkNShnlx.js";import"./@ctrl-BZ4iwDfm.js";import"./lodash-DG05lPuJ.js";import"./vue3-json-viewer-BcgvkQJY.js";import"./dayjs-Dk7pxPyP.js";import"./vue-i18n-DZLdcVEL.js";import"./@intlify-D9VlDxbJ.js";import"./pinia-BY_IhmGU.js";import"./axios-BlN9Xwzv.js";import"./crypto-js-DUpU9tZe.js";import"./sm-crypto-CNoQwlJF.js";import"./jsbn-aJNYh3Pg.js";import"./nprogress-Buvl-64T.js";import"./vue-router-BJIyZwNj.js";import"./mitt-CNZ6avp8.js";import"./@babel-rSvM8Ko2.js";import"./resize-observer-polyfill-OVnto9HH.js";import"./@emotion-BUNCmyKw.js";import"./stylis-cmx5w8r8.js";import"./vue-types-Ci_fOQyt.js";import"./dom-align-CCb293uS.js";import"./lodash-es-DiERF9Dp.js";import"./async-validator-BTKOuuO-.js";import"./throttle-debounce-w9OM8Bxz.js";
/**
 * 三级等保 api 封装
 *
 * @Author:    1024创新实验室-主任-卓大
 * @Date:      2024-07-31 21:02:37
 * @Copyright  1024创新实验室
 */const w=()=>p("/support/protect/level3protect/getConfig"),v=e=>c("/support/protect/level3protect/updateConfig",e),x=s("h4",null,"三级等保：",-1),M=s("pre",null,[u("  1.三级等保是中国国家等级保护认证中的最高级别认证，该认证包含了五个等级保护安全技术要求和五个安全管理要求，共涉及测评分类73类，要求非常严格。\n  2.三级等保是地市级以上国家机关、重要企事业单位需要达成的认证，在金融行业中，可以看作是除了银行机构以外最高级别的信息安全等级保护。\n  3.具体三级等保要求，请查看“1024创新实验室”写的相关文档 "),s("a",{href:"https://smartadmin.vip/views/level3protect/basic.html",target:"_blank"},"三级等保文档")],-1),y=s("br",null,null,-1),F=s("br",null,null,-1),j={__name:"level3-protect-config-index",setup(s){const c={loginFailMaxTimes:5,loginFailLockMinutes:30,loginActiveTimeoutMinutes:30,passwordComplexityEnabled:!0,regularChangePasswordMonths:3,regularChangePasswordNotAllowRepeatTimes:3,twoFactorLoginEnabled:!0,fileDetectFlag:!0,maxUploadFileSizeMb:50},p={loginFailMaxTimes:0,loginFailLockMinutes:0,loginActiveTimeoutMinutes:0,passwordComplexityEnabled:!1,regularChangePasswordMonths:0,regularChangePasswordNotAllowRepeatTimes:0,twoFactorLoginEnabled:!1,maxUploadFileSizeMb:0},j=e({...c}),k={loginFailMaxTimes:[{required:!0,message:"请输入 最大连续登录失败次数"}],loginFailLockMinutes:[{required:!0,message:"请输入 连续登录失败锁定分钟"}],loginActiveTimeoutMinutes:[{required:!0,message:"请输入 最低活跃时间分钟"}],regularChangePasswordMonths:[{required:!0,message:"请输入 定期修改密码时间间隔"}],regularChangePasswordNotAllowRepeatTimes:[{required:!0,message:"请输入 定期修改密码时间间隔"}],maxUploadFileSizeMb:[{required:!0,message:"请输入 上传文件大小限制"}]};a((async function(){g.show();try{let e=await w();if(!e.data)return void f.warn("当前未配置三级等保");let a=JSON.parse(e.data);j.loginFailMaxTimes=a.loginFailMaxTimes,j.loginFailLockMinutes=a.loginFailLockMinutes,j.loginActiveTimeoutMinutes=a.loginActiveTimeoutMinutes,j.passwordComplexityEnabled=a.passwordComplexityEnabled,j.regularChangePasswordMonths=a.regularChangePasswordMonths,j.regularChangePasswordNotAllowRepeatTimes=a.regularChangePasswordNotAllowRepeatTimes,j.twoFactorLoginEnabled=a.twoFactorLoginEnabled,j.maxUploadFileSizeMb=a.maxUploadFileSizeMb,j.fileDetectFlag=a.fileDetectFlag}catch(e){h.captureError(e)}finally{g.hide()}}));const C=l();function T(){C.value.validate().then(_).catch((e=>{f.error("参数验证错误，请仔细填写表单数据!")}))}async function _(){g.show();try{let e=await v(j);f.success(e.msg)}catch(e){h.captureError(e)}finally{g.hide()}}function U(){Object.assign(j,c),_()}function q(){b.confirm({title:"提示",content:"确定要清除三级等保配置吗?这样系统不安全哦",okText:"清除三级等保配置",okType:"danger",onOk(){Object.assign(j,p),_()},cancelText:"取消",onCancel(){}})}return(e,a)=>{const l=t("a-alert"),s=t("a-switch"),c=t("a-form-item"),p=t("a-input-number"),g=t("a-button"),h=t("a-form"),f=t("a-card");return i(),o(d,null,[r(l,{closable:""},{message:n((()=>[x])),description:n((()=>[M])),_:1}),y,r(f,{title:"三级等保配置"},{default:n((()=>[r(h,{model:j,rules:k,ref_key:"formRef",ref:C,style:{width:"100%"},"label-col":{span:6},"wrapper-col":{span:18},autocomplete:"off",class:"smart-query-form"},{default:n((()=>[r(c,{label:"配置双因子登录模式",class:"smart-query-form-item",extra:"在用户登录时，需要同时提供用户名和密码以及其他形式的身份验证信息，例如短信验证码等"},{default:n((()=>[r(s,{checked:j.twoFactorLoginEnabled,"onUpdate:checked":a[0]||(a[0]=e=>j.twoFactorLoginEnabled=e),"checked-children":"开启 ","un-checked-children":"关闭 "},null,8,["checked"])])),_:1}),r(c,{label:"最大连续登录失败次数",class:"smart-query-form-item",extra:"连续登录失败超过一定次数，则需要锁定；默认5次；0则不锁定；",name:"loginFailMaxTimes"},{default:n((()=>[r(p,{min:0,max:10,value:j.loginFailMaxTimes,"onUpdate:value":a[1]||(a[1]=e=>j.loginFailMaxTimes=e),placeholder:"最大连续登录失败次数","addon-after":"次"},null,8,["value"])])),_:1}),r(c,{name:"loginFailLockMinutes",label:"连续登录失败锁定分钟",class:"smart-query-form-item",extra:"连续登录失败锁定的时间；默认30分钟，0则不锁定"},{default:n((()=>[r(p,{min:0,value:j.loginFailLockMinutes,"onUpdate:value":a[2]||(a[2]=e=>j.loginFailLockMinutes=e),placeholder:"连续登录失败锁定时分钟","addon-after":"分钟"},null,8,["value"])])),_:1}),r(c,{name:"loginActiveTimeoutMinutes",label:"登录后无操作自动退出的分钟",class:"smart-query-form-item",extra:"如：登录1小时没操作自动退出当前登录状态；默认30分钟"},{default:n((()=>[r(p,{min:-1,value:j.loginActiveTimeoutMinutes,"onUpdate:value":a[3]||(a[3]=e=>j.loginActiveTimeoutMinutes=e),placeholder:"登录后无操作自动退出的分钟","addon-after":"分钟"},null,8,["value"])])),_:1}),r(c,{label:"开启密码复杂度",class:"smart-query-form-item",extra:"密码长度为8-20位且必须包含字母、数字、特殊符号（如：@#$%^&*()_+-=）等三种字符"},{default:n((()=>[r(s,{checked:j.passwordComplexityEnabled,"onUpdate:checked":a[4]||(a[4]=e=>j.passwordComplexityEnabled=e),"checked-children":"开启 ","un-checked-children":"关闭 "},null,8,["checked"])])),_:1}),r(c,{name:"regularChangePasswordMonths",label:"定期修改密码时间间隔",class:"smart-query-form-item",extra:"定期修改密码时间间隔，默认3个月"},{default:n((()=>[r(p,{min:-1,max:6,value:j.regularChangePasswordMonths,"onUpdate:value":a[5]||(a[5]=e=>j.regularChangePasswordMonths=e),placeholder:"定期修改密码时间间隔","addon-after":"月"},null,8,["value"])])),_:1}),r(c,{name:"regularChangePasswordNotAllowRepeatTimes",label:"定期修改密码不允许重复次数",class:"smart-query-form-item",extra:"定期修改密码不允许重复次数，默认：3次以内密码不能相同"},{default:n((()=>[r(p,{min:-1,max:6,value:j.regularChangePasswordNotAllowRepeatTimes,"onUpdate:value":a[6]||(a[6]=e=>j.regularChangePasswordNotAllowRepeatTimes=e),placeholder:"相同密码不允许重复次数","addon-after":"次"},null,8,["value"])])),_:1}),r(c,{label:"文件安全检测",class:"smart-query-form-item",extra:"对文件类型、恶意文件进行检测；（具体请看后端： SecurityFileService 类 checkFile 方法 ）"},{default:n((()=>[r(s,{checked:j.fileDetectFlag,"onUpdate:checked":a[7]||(a[7]=e=>j.fileDetectFlag=e),"checked-children":"开启 ","un-checked-children":"关闭 "},null,8,["checked"])])),_:1}),r(c,{name:"maxUploadFileSizeMb",label:"上传文件大小限制",class:"smart-query-form-item",extra:"上传文件大小限制，默认 50 mb ( 0 表示不限制)"},{default:n((()=>[r(p,{min:0,value:j.maxUploadFileSizeMb,"onUpdate:value":a[8]||(a[8]=e=>j.maxUploadFileSizeMb=e),placeholder:"上传文件大小限制","addon-after":"mb(兆)"},null,8,["value"])])),_:1}),F,r(c,{"wrapper-col":{span:14,offset:6}},{default:n((()=>[r(g,{type:"primary",style:{"margin-right":"20px"},onClick:m(T,["prevent"])},{default:n((()=>[u("保存配置")])),_:1}),r(g,{style:{"margin-right":"20px"},onClick:U},{default:n((()=>[u("恢复三级等保默认配置")])),_:1}),r(g,{danger:"",onClick:q},{default:n((()=>[u("清除所有配置")])),_:1})])),_:1})])),_:1},8,["model"])])),_:1})],64)}}};export{j as default};
